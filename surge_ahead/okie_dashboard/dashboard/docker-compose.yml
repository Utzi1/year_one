# Define all services for the Okie Dashboard application
services:
  # Redis database service - stores application data
  redis:
    image: redis:latest                                    # Use official Redis image
    platform: linux/arm64                                 # Specify ARM64 platform for Apple Silicon
    container_name: okie-redis                            # Custom container name for easy identification
    ports:
      - "6379:6379"                                       # Expose Redis default port
    volumes:
      - redis_data:/data                                  # Persist Redis data
      - ./redis.conf:/usr/local/etc/redis/redis.conf     # Mount custom Redis configuration
    command: redis-server /usr/local/etc/redis/redis.conf # Start Redis with custom config
    networks:
      - okie-network                                      # Connect to custom network

  # Grafana visualization service - creates dashboards and visualizations
  grafana:
    image: grafana/grafana:latest                         # Use official Grafana image
    container_name: okie-grafana                          # Custom container name
    ports:
      - "3001:3000"                                       # Map Grafana port 3000 to host port 3001
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin                 # Set admin password
      - GF_INSTALL_PLUGINS=redis-datasource,yesoreyeram-infinity-datasource  # Install required plugins
      - GF_AUTH_ANONYMOUS_ENABLED=true                   # Enable anonymous access
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin                 # Give admin role to anonymous users
      - GF_AUTH_DISABLE_LOGIN_FORM=true                  # Disable login form (auto-login)
    volumes:
      - grafana_data:/var/lib/grafana                     # Persist Grafana data
      - ./grafana/provisioning:/etc/grafana/provisioning # Mount provisioning configs
      - ./:/var/lib/grafana/dashboards                   # Mount dashboard files
    depends_on:
      - redis                                             # Wait for Redis to start first
    networks:
      - okie-network                                      # Connect to custom network

# Define persistent volumes for data storage
volumes:
  redis_data:                                             # Volume for Redis data persistence
  grafana_data:                                           # Volume for Grafana data persistence

# Define custom network for service communication
networks:
  okie-network:                                           # Custom network for inter-service communication
    driver: bridge                                        # Use bridge driver for local networking